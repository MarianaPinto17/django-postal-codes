# Generated by Django 4.1.3 on 2022-12-03 11:44

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Country"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="County",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="County")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Locality",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="Locality")),
                (
                    "polygon",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True,
                        null=True,
                        srid=4326,
                        verbose_name="Administrative region",
                    ),
                ),
                (
                    "county",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="localities",
                        to="django_postal_codes.county",
                        verbose_name="County that the locality belongs to",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PostalCode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "artery_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("prep1", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "artery_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("prep2", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "artery_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "artery_local",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "postal_code",
                    models.IntegerField(
                        blank=True,
                        db_index=True,
                        help_text="cp4",
                        verbose_name="Postal Code",
                    ),
                ),
                (
                    "postal_code_extension",
                    models.IntegerField(
                        blank=True,
                        db_index=True,
                        help_text="cp3",
                        verbose_name="Postal Code Extension",
                    ),
                ),
                (
                    "postal_designation",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Postal Designation",
                    ),
                ),
                (
                    "full_address",
                    models.TextField(blank=True, verbose_name="Full address"),
                ),
                (
                    "locality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_postal_codes.locality",
                        verbose_name="County that the postal code belongs too",
                    ),
                ),
            ],
            options={
                "verbose_name": "Postal Code",
                "verbose_name_plural": "Postal Codes",
            },
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="District")),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="districts",
                        to="django_postal_codes.country",
                        verbose_name="Country that the district belongs to",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="county",
            name="district",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="counties",
                to="django_postal_codes.district",
                verbose_name="District that the county belongs to",
            ),
        ),
    ]
